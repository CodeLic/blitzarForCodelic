import{_ as e}from"./preload-helper.1c052cf7.js";import{_ as i,G as l,o as p,b as r,A as s,al as o,g as a,f as n}from"./plugin-vue_export-helper.940ab1d0.js";const sa='{"title":"BlitzTable","description":"","frontmatter":{"editLink":true},"headers":[{"level":2,"title":"Basics","slug":"basics"},{"level":3,"title":"Basic Example","slug":"basic-example"},{"level":3,"title":"Advanced Example","slug":"advanced-example"},{"level":3,"title":"Using Custom Components","slug":"using-custom-components"},{"level":2,"title":"Column Features","slug":"column-features"},{"level":3,"title":"Nested Data","slug":"nested-data"},{"level":3,"title":"Mutating Columns","slug":"mutating-columns"},{"level":3,"title":"Combining Columns","slug":"combining-columns"},{"level":3,"title":"Grid View","slug":"grid-view"},{"level":2,"title":"Editing","slug":"editing"},{"level":3,"title":"Edit Inline","slug":"edit-inline"},{"level":3,"title":"Edit on Cell Double-Click","slug":"edit-on-cell-double-click"},{"level":3,"title":"Edit Modal on Row Click","slug":"edit-modal-on-row-click"},{"level":3,"title":"Edit Modal on Button Click","slug":"edit-modal-on-button-click"},{"level":3,"title":"Adding a New Row","slug":"adding-a-new-row"},{"level":3,"title":"Deleting From Parent","slug":"deleting-from-parent"},{"level":3,"title":"Deleting via @rowDeleted","slug":"deleting-via-rowdeleted"},{"level":3,"title":"Deleting via v-model:rows","slug":"deleting-via-v-model-rows"},{"level":2,"title":"Filters","slug":"filters"},{"level":3,"title":"Filters that Auto-Detect Values","slug":"filters-that-auto-detect-values"},{"level":3,"title":"Range Filters","slug":"range-filters"},{"level":3,"title":"Advanced Filters","slug":"advanced-filters"},{"level":2,"title":"Selection","slug":"selection"},{"level":3,"title":"Select by Checkbox","slug":"select-by-checkbox"},{"level":2,"title":"Styling","slug":"styling"},{"level":3,"title":"Show Row Numbers","slug":"show-row-numbers"},{"level":3,"title":"Extra Components via Slots","slug":"extra-components-via-slots"}],"relativePath":"blitz-table/index.md","lastUpdated":1666679184463}',c={},d=o('<h1 id="blitztable" tabindex="-1">BlitzTable <a class="header-anchor" href="#blitztable" aria-hidden="true">#</a></h1><h2 id="basics" tabindex="-1">Basics <a class="header-anchor" href="#basics" aria-hidden="true">#</a></h2><p><code>&lt;BlitzTable /&gt;</code> is a <em><strong>data table</strong></em> component you can use with the same <code>schema</code> syntax of <a href="/blitz-form/">BlitzForms</a> to define your columns.</p><p>With a single &quot;schema&quot; you can generate:</p><ul><li>the columns of the table</li><li>the fields of the cards in grid-view</li><li>an editable form in a dialog when clicking on a row</li></ul><h3 id="basic-example" tabindex="-1">Basic Example <a class="header-anchor" href="#basic-example" aria-hidden="true">#</a></h3><p>Here we see a basic example for a BlitzTable. Check out the <em>template</em> and <em>script</em> tabs below to see how easy it is to render a data table based on the schema.</p><p>By default</p><ul><li>the table shows ALL the rows without pagination</li><li>all the rows are sortable</li></ul>',9),u=o('<h3 id="advanced-example" tabindex="-1">Advanced Example <a class="header-anchor" href="#advanced-example" aria-hidden="true">#</a></h3><p>This is a more advanced example that includes...</p><ul><li>a title</li><li>filters</li><li>a search input field</li><li>a grid/table view toggle</li><li>pagination features</li><li>an image rendered with <code>&lt;img /&gt;</code></li><li>dates are shown with <code>toLocaleDateString()</code></li><li>numbers are shown with <code>toLocaleString()</code></li><li>Online and Animal columns show text data as emoji</li></ul>',3),_=a("h3",{id:"using-custom-components",tabindex:"-1"},[n("Using Custom Components "),a("a",{class:"header-anchor",href:"#using-custom-components","aria-hidden":"true"},"#")],-1),m=a("p",null,"Here you see the example uses all HTML5 components to render all the fields surrounding the table.",-1),h=a("p",null,"The idea, as always with Blitzar, is that you BYOC (Bring Your Own Components).",-1),k=o(`<h2 id="column-features" tabindex="-1">Column Features <a class="header-anchor" href="#column-features" aria-hidden="true">#</a></h2><p>Because every column is based on a BlitzForm field, there is quite some flexibility what you can do with a column. Below are some examples of this.</p><h3 id="nested-data" tabindex="-1">Nested Data <a class="header-anchor" href="#nested-data" aria-hidden="true">#</a></h3><p>Columns support &quot;dot-notation&quot; to access nested data in your rows array.</p><div class="language-js"><pre><code><span class="token keyword">const</span> rows <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&#39;Luca&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&#39;Ban&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>

<span class="token keyword">const</span> schemaColumns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;name.first&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;First Name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;name.last&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Last Name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre></div><p>Full example:</p>`,6),w=o(`<h3 id="mutating-columns" tabindex="-1">Mutating Columns <a class="header-anchor" href="#mutating-columns" aria-hidden="true">#</a></h3><p>Columns can be &quot;mutated&quot; meaning data can be shown differently from the actual underlying data. To do so define a <code>parseValue</code> function.</p><div class="language-js"><pre><code><span class="token keyword">const</span> schemaColumns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> <span class="token function-variable function">parseValue</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Date&#39;</span><span class="token punctuation">,</span> <span class="token function-variable function">parseValue</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Balance&#39;</span><span class="token punctuation">,</span> <span class="token function-variable function">parseValue</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre></div><p>Full example:</p>`,4),g=o('<h3 id="combining-columns" tabindex="-1">Combining Columns <a class="header-anchor" href="#combining-columns" aria-hidden="true">#</a></h3><p>Two table columns can be combined. A combined column is one that shows data based on multiple fields/columns.</p><div class="language-js"><pre><code><span class="token keyword">const</span> schemaColumns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token comment">// no &#39;id&#39; required for the combined column</span>\n  <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Full Name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> <span class="token punctuation">{</span> formData <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>formData<span class="token punctuation">.</span>firstName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>formData<span class="token punctuation">.</span>lastName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span>\n</code></pre></div><p>In this example the <em>Full Name</em> and <em>Initials</em> are calculated on the fly when showing the table. You can even sort and search for data in these combined columns.</p>',4),v=a("h3",{id:"grid-view",tabindex:"-1"},[n("Grid View "),a("a",{class:"header-anchor",href:"#grid-view","aria-hidden":"true"},"#")],-1),b=a("p",null,"You can have a separate view for the table and grid views.",-1),f=o(`<h2 id="editing" tabindex="-1">Editing <a class="header-anchor" href="#editing" aria-hidden="true">#</a></h2><p>There are various ways to implement the ability to edit table data. Below I show case 4 ways to easily implement editing. Each time you can check the <em>template</em> and <em>script</em> tabs to check how it can be implemented.</p><p>Any editing requires every object in your <code>rows</code> array to have an <strong><code>id</code> prop</strong>.</p><h3 id="edit-inline" tabindex="-1">Edit Inline <a class="header-anchor" href="#edit-inline" aria-hidden="true">#</a></h3><p>This example simply toggles the &quot;mode&quot; of the table from &quot;raw&quot; to &quot;edit&quot;. See <a href="/blitz-form/#edit-readonly-disabled-raw-modes">BlitzTable &gt; Modes</a> for more info.</p><p>To be able to show actual form components (like <code>&lt;input /&gt;</code> or custom components) you need to make sure to add them to the <code>schemaColumns</code>.</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BlitzTable</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>edit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:schemaColumns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>schemaColumns<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">const</span> schemaColumns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre></div><p>Full example:</p>`,9),y=a("h3",{id:"edit-on-cell-double-click",tabindex:"-1"},[n("Edit on Cell Double-Click "),a("a",{class:"header-anchor",href:"#edit-on-cell-double-click","aria-hidden":"true"},"#")],-1),T=a("p",null,[n("Making a Cell editable on double-click is a bit more advanced and requires more setup. You need to make use of Dynamic Props to make it possible. (more info on Dynamic Props at "),a("a",{href:"/advanced/#dynamic-props"},"Advanced > Dynamic Props"),n(")")],-1),E=a("p",null,"Check the source code of the example below to see how it's implemented:",-1),F=a("h3",{id:"edit-modal-on-row-click",tabindex:"-1"},[n("Edit Modal on Row Click "),a("a",{class:"header-anchor",href:"#edit-modal-on-row-click","aria-hidden":"true"},"#")],-1),R=a("p",null,"It's possible to show a modal with a BlitzForm to edit data on row click. See the source code below to see how it's implemented:",-1),A=a("h3",{id:"edit-modal-on-button-click",tabindex:"-1"},[n("Edit Modal on Button Click "),a("a",{class:"header-anchor",href:"#edit-modal-on-button-click","aria-hidden":"true"},"#")],-1),x=a("p",null,"It's possible to show a modal with a BlitzForm to edit data on the click of a button. See the source code below to see how it's implemented:",-1),D=a("h3",{id:"adding-a-new-row",tabindex:"-1"},[n("Adding a New Row "),a("a",{class:"header-anchor",href:"#adding-a-new-row","aria-hidden":"true"},"#")],-1),I=a("p",null,"This is an example of how you could set up a button that shows a BlitzForm to add new data to the table.",-1),V=a("p",null,"Adding a new object to your rows array will be detected by BlitzTable.",-1),P=a("ul",null,[a("li",null,[a("code",null,".unshift()"),n(" an object to your rows array & it will appear as the first row.")]),a("li",null,[a("code",null,".push()"),n(" an object to your rows array & it will appear as the last row.")])],-1),C=a("h3",{id:"deleting-from-parent",tabindex:"-1"},[n("Deleting From Parent "),a("a",{class:"header-anchor",href:"#deleting-from-parent","aria-hidden":"true"},"#")],-1),L=a("p",null,[n("There are a couple ways you can add "),a("em",null,"delete row"),n(" logic. No way in particular is the "),a("em",null,'"best"'),n(" way, so check the code of these examples and feel free to use any method.")],-1),O=a("p",null,[n("Here we show an example where the delete logic is handled directly from the parent where you define the "),a("code",null,"schemaColumns"),n(" logic.")],-1),S=a("h3",{id:"deleting-via-rowdeleted",tabindex:"-1"},[n("Deleting via "),a("code",null,"@rowDeleted"),n(),a("a",{class:"header-anchor",href:"#deleting-via-rowdeleted","aria-hidden":"true"},"#")],-1),B=a("p",null,[n("This example uses the "),a("code",null,"@rowDeleted"),n(" event to then remove the row via index from the rows array.")],-1),N=a("h3",{id:"deleting-via-v-model-rows",tabindex:"-1"},[n("Deleting via "),a("code",null,"v-model:rows"),n(),a("a",{class:"header-anchor",href:"#deleting-via-v-model-rows","aria-hidden":"true"},"#")],-1),q=a("p",null,[n("This example uses "),a("code",null,"v-model:rows"),n(" to keep rows in sync when deleting a row.")],-1),z=a("h2",{id:"filters",tabindex:"-1"},[n("Filters "),a("a",{class:"header-anchor",href:"#filters","aria-hidden":"true"},"#")],-1),j=a("h3",{id:"filters-that-auto-detect-values",tabindex:"-1"},[n("Filters that Auto-Detect Values "),a("a",{class:"header-anchor",href:"#filters-that-auto-detect-values","aria-hidden":"true"},"#")],-1),M=o('<h3 id="range-filters" tabindex="-1">Range Filters <a class="header-anchor" href="#range-filters" aria-hidden="true">#</a></h3><p>If you need more complex filters, you can also pass a custom component (just like a <code>SchemaField</code>) alongside your own <code>compareFn</code> which will compare all rows against the user input of that component.</p><p>This example passes input fields alongside a <code>compareFn</code> to achieve <em>range filters</em>; &gt; (greater than) and &lt; (less than).</p>',3),Y=a("h3",{id:"advanced-filters",tabindex:"-1"},[n("Advanced Filters "),a("a",{class:"header-anchor",href:"#advanced-filters","aria-hidden":"true"},"#")],-1),H=a("p",null,[n("Here is an example where we provide a "),a("code",null,"compareFn"),n(" which parses a certain field as a "),a("code",null,"Date"),n(" and then compares the year/month and compare that to the user input in the filter field.")],-1),$=o(`<h2 id="selection" tabindex="-1">Selection <a class="header-anchor" href="#selection" aria-hidden="true">#</a></h2><h3 id="select-by-checkbox" tabindex="-1">Select by Checkbox <a class="header-anchor" href="#select-by-checkbox" aria-hidden="true">#</a></h3><p>To be able to select rows with some sort of checkbox (please provide your own, or use the HTML5 input with type &#39;checkbox&#39;) you need to set a column ID to a special string imported from Blitzar:</p><p>Please note that every object in your <code>rows</code> array needs an <strong><code>id</code> prop</strong> in order for the selection feature to work.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">ROW_SELECTION_ID</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;blitzar&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;blitzar/dist/style.css&#39;</span>

<span class="token keyword">const</span> schemaColumns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token constant">ROW_SELECTION_ID</span><span class="token punctuation">,</span> <span class="token comment">// or you can use the string &#39;BLITZ-TABLE-ROW-SELECTION&#39;</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;checkbox&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre></div><p>For the actual selection checkbox, you can use any component that works with <code>v-model</code> and accepts a <code>boolean</code> for its <code>modelValue</code>. Please Bring Your Own Components. : )</p>`,6),W=o('<p>When you search something and then click the <em>select all</em> checkbox in the header, it will select all filtered rows based on your search results.</p><h2 id="styling" tabindex="-1">Styling <a class="header-anchor" href="#styling" aria-hidden="true">#</a></h2><p>TODO: Styling section will be re-written soon.</p><h3 id="show-row-numbers" tabindex="-1">Show Row Numbers <a class="header-anchor" href="#show-row-numbers" aria-hidden="true">#</a></h3><p>This example uses <a href="/blitz-form/#parsevalue-parseinput"><code>parseValue</code></a> to show row numbers.</p>',5),U=a("h3",{id:"extra-components-via-slots",tabindex:"-1"},[n("Extra Components via Slots "),a("a",{class:"header-anchor",href:"#extra-components-via-slots","aria-hidden":"true"},"#")],-1),G=a("p",null,"You can add custom components and elements via the default slot. By default it will show up above the table.",-1);function Z(J,K,Q,X,aa,ea){const t=l("CodeBlockComponent");return p(),r("div",null,[d,s(t,{importFn:()=>e(()=>import("./Basics - Basic Example.dfc942ed.js"),["assets/Basics - Basic Example.dfc942ed.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Basics - Basic Example.643af3ed.js"),[])},null,8,["importFn","importFnRaw"]),u,s(t,{importFn:()=>e(()=>import("./Basics - Advanced Example.58647d8d.js"),["assets/Basics - Advanced Example.58647d8d.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Basics - Advanced Example.689648f7.js"),[])},null,8,["importFn","importFnRaw"]),_,m,h,s(t,{importFn:()=>e(()=>import("./Basics - Example HTML5 Components.9c2eb333.js"),["assets/Basics - Example HTML5 Components.9c2eb333.js","assets/preload-helper.1c052cf7.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Basics - Example HTML5 Components.6db3d8e9.js"),[])},null,8,["importFn","importFnRaw"]),k,s(t,{importFn:()=>e(()=>import("./Column Features - Nested Data.9948570c.js"),["assets/Column Features - Nested Data.9948570c.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Column Features - Nested Data.52370068.js"),[])},null,8,["importFn","importFnRaw"]),w,s(t,{importFn:()=>e(()=>import("./Column Features - Mutating Columns.ca526c17.js"),["assets/Column Features - Mutating Columns.ca526c17.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Column Features - Mutating Columns.e02507a9.js"),[])},null,8,["importFn","importFnRaw"]),g,s(t,{importFn:()=>e(()=>import("./Column Features - Combining Columns.ae795990.js"),["assets/Column Features - Combining Columns.ae795990.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Column Features - Combining Columns.37866671.js"),[])},null,8,["importFn","importFnRaw"]),v,b,s(t,{importFn:()=>e(()=>import("./Column Features - Grid View.c9be8b32.js"),["assets/Column Features - Grid View.c9be8b32.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Column Features - Grid View.a9ac1926.js"),[])},null,8,["importFn","importFnRaw"]),f,s(t,{importFn:()=>e(()=>import("./Editing - Inline.c453ce80.js"),["assets/Editing - Inline.c453ce80.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/index.es.364bad67.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Editing - Inline.bedb2fe8.js"),[])},null,8,["importFn","importFnRaw"]),y,T,E,s(t,{importFn:()=>e(()=>import("./Editing - On Cell Double-Click.70aa9850.js"),["assets/Editing - On Cell Double-Click.70aa9850.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Editing - On Cell Double-Click.4c4584ee.js"),[])},null,8,["importFn","importFnRaw"]),F,R,s(t,{importFn:()=>e(()=>import("./Editing - Modal on Row Click.f316c585.js"),["assets/Editing - Modal on Row Click.f316c585.js","assets/VueFinalModal.esm.6e938723.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/index.es.364bad67.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Editing - Modal on Row Click.b31b0f61.js"),[])},null,8,["importFn","importFnRaw"]),A,x,s(t,{importFn:()=>e(()=>import("./Editing - Modal on Button Click.9b4b45c7.js"),["assets/Editing - Modal on Button Click.9b4b45c7.js","assets/VueFinalModal.esm.6e938723.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/index.es.364bad67.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Editing - Modal on Button Click.172f126a.js"),[])},null,8,["importFn","importFnRaw"]),D,I,V,P,s(t,{importFn:()=>e(()=>import("./Editing - Adding a New Row.71e87d94.js"),["assets/Editing - Adding a New Row.71e87d94.js","assets/VueFinalModal.esm.6e938723.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/index.es.364bad67.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Editing - Adding a New Row.a4ce8b55.js"),[])},null,8,["importFn","importFnRaw"]),C,L,O,s(t,{importFn:()=>e(()=>import("./Editing - Delete a Row From Parent.e462cc99.js"),["assets/Editing - Delete a Row From Parent.e462cc99.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Editing - Delete a Row From Parent.67b5c729.js"),[])},null,8,["importFn","importFnRaw"]),S,B,s(t,{importFn:()=>e(()=>import("./Editing - Delete via row-deleted.756bac8f.js"),["assets/Editing - Delete via row-deleted.756bac8f.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Editing - Delete via row-deleted.8da2d4ad.js"),[])},null,8,["importFn","importFnRaw"]),N,q,s(t,{importFn:()=>e(()=>import("./Editing - Delete via update-rows.72379576.js"),["assets/Editing - Delete via update-rows.72379576.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Editing - Delete via update-rows.414ab68c.js"),[])},null,8,["importFn","importFnRaw"]),z,j,s(t,{importFn:()=>e(()=>import("./Filtering - Auto Detect Filter Values.61c9a77a.js"),["assets/Filtering - Auto Detect Filter Values.61c9a77a.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Filtering - Auto Detect Filter Values.d102acfc.js"),[])},null,8,["importFn","importFnRaw"]),M,s(t,{importFn:()=>e(()=>import("./Filtering - Range.e9391f38.js"),["assets/Filtering - Range.e9391f38.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Filtering - Range.f07eb18f.js"),[])},null,8,["importFn","importFnRaw"]),Y,H,s(t,{importFn:()=>e(()=>import("./Filtering - Advanced.c6812a88.js"),["assets/Filtering - Advanced.c6812a88.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Filtering - Advanced.421c71d6.js"),[])},null,8,["importFn","importFnRaw"]),$,s(t,{importFn:()=>e(()=>import("./Selection.6935c8c6.js"),["assets/Selection.6935c8c6.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js","assets/style.186bb6a9.js"]),importFnRaw:()=>e(()=>import("./Selection.4c34e303.js"),[])},null,8,["importFn","importFnRaw"]),W,s(t,{importFn:()=>e(()=>import("./Styling - Show Row Numbers.7d768583.js"),["assets/Styling - Show Row Numbers.7d768583.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Styling - Show Row Numbers.42807412.js"),[])},null,8,["importFn","importFnRaw"]),U,G,s(t,{importFn:()=>e(()=>import("./Styling - Extra Components via Slots.c54d732a.js"),["assets/Styling - Extra Components via Slots.c54d732a.js","assets/preload-helper.1c052cf7.js","assets/index.es.364bad67.js","assets/framework.80e446ab.js","assets/plugin-vue_export-helper.940ab1d0.js"]),importFnRaw:()=>e(()=>import("./Styling - Extra Components via Slots.fd1e42b5.js"),[])},null,8,["importFn","importFnRaw"])])}var oa=i(c,[["render",Z]]);export{sa as __pageData,oa as default};
